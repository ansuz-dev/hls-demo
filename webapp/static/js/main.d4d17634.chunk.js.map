{"version":3,"sources":["api.js","components/MediaUploader.js","components/MediaPlayList.js","components/MediaPlayer.js","components/MediaPlayBox.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","headers","common","baseURL","uploadMedia","file","a","config","formData","FormData","append","post","listMedia","get","res","data","MediaUploader","videoRef","useRef","useState","video","setVideo","status","setStatus","uploading","setUploading","handleChooseFileClicked","useCallback","current","click","handleFileChanged","evt","target","files","length","handleVideoRemoved","handleUploadClicked","Box","sx","p","border","borderRadius","Typography","variant","mb","Grid","container","mt","item","xs","md","MenuItem","disableRipple","disableTouchRipple","ListItemIcon","Movie","fontSize","ListItemText","name","IconButton","color","disabled","onClick","Close","Alert","security","Stack","spacing","direction","Button","disableElevation","size","ref","type","accept","hidden","onChange","CircularProgress","MediaPlayList","onMediaSelect","mediaList","setMediaList","useEffect","then","list","map","media","sm","lg","Card","CardMedia","component","image","thumbnail","alt","CardActions","justifyContent","startIcon","PlayArrow","MediaPlayer","canPlayType","src","play","window","Hls","isSupported","hls","loadSource","attachMedia","width","controls","kind","defaultProps","MediaPlayBox","setMedia","handleMediaSelect","selectedMedia","App","Container","my","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4d17634.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const BASE_URL = \"http://localhost:3000/api/v1/\";\n\naxios.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\";\naxios.defaults.baseURL = BASE_URL;\n\nexport const uploadMedia = async file => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    };\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    await axios.post(\"media\", formData, config);\n\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport const listMedia = async () => {\n  try {\n    const res = await axios.get(\"media/list\");\n\n    return res.data;\n  } catch (error) {\n    return [];\n  }\n};\n","import React, {useCallback, useRef, useState} from \"react\";\n\nimport {\n  Box, Button, ListItemIcon, ListItemText,\n  MenuItem, Stack, Typography, Grid, IconButton, Alert,\n  CircularProgress,\n} from \"@mui/material\";\n\nimport {Movie, Close} from \"@mui/icons-material\";\nimport {uploadMedia} from \"../api\";\n\nconst MediaUploader = () => {\n  const videoRef = useRef();\n\n  const [video, setVideo] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [uploading, setUploading] = useState(false);\n\n  const handleChooseFileClicked = useCallback(() => {\n    videoRef.current.click();\n  }, []);\n\n  const handleFileChanged = useCallback(evt => {\n    if (evt.target.files && evt.target.files.length) {\n      setVideo(evt.target.files[0]);\n      setStatus(null);\n    }\n  }, []);\n\n  const handleVideoRemoved = useCallback(() => {\n    setVideo(null);\n  }, []);\n\n  const handleUploadClicked = useCallback(async () => {\n    setUploading(true);\n\n    const res = await uploadMedia(video);\n\n    setUploading(false);\n    setStatus(res ? \"success\" : \"error\");\n  }, [video]);\n\n  return (\n    <Box sx={{p: 2, border: \"1px solid lightgrey\", borderRadius: 2}}>\n      <Typography variant=\"h5\" sx={{mb: 2}}>\n        Upload media file\n      </Typography>\n\n      {\n        video && (\n          <Grid container sx={{mt: 2}}>\n            <Grid item xs={12} md={6}>\n              <MenuItem disableRipple disableTouchRipple>\n                <ListItemIcon>\n                  <Movie fontSize=\"small\" />\n                </ListItemIcon>\n                <ListItemText>{video.name}</ListItemText>\n                <IconButton\n                  color=\"error\"\n                  disabled={uploading}\n                  onClick={handleVideoRemoved}\n                >\n                  <Close />\n                </IconButton>\n              </MenuItem>\n\n              {\n                status && (\n                  <Alert security={status} sx={{mt: 2}}>\n                    {status === \"success\" && \"Video is ready for streaming !\"}\n                    {status === \"error\" && \"There's an error while uploading the video !\"}\n                  </Alert>\n                )\n              }\n            </Grid>\n          </Grid>\n        )\n      }\n\n      <Stack spacing={2} direction=\"row\" sx={{mt: 2}}>\n        <Button\n          disableElevation\n          size=\"small\"\n          variant=\"contained\"\n          disabled={uploading}\n          onClick={handleChooseFileClicked}\n        >\n          Choose media file\n          <input\n            ref={videoRef}\n            type=\"file\"\n            accept=\"video/*\"\n            hidden\n            onChange={handleFileChanged}\n          />\n        </Button>\n        <Button\n          disableElevation\n          disabled={!video || uploading}\n          size=\"small\"\n          variant=\"contained\"\n          onClick={handleUploadClicked}\n        >\n          {!uploading && \"Upload\"}\n          {uploading && <CircularProgress size={20} />}\n        </Button>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default MediaUploader;\n","import React, {useEffect, useState} from \"react\";\nimport {\n  Button, Card, CardActions, CardMedia, Grid,\n} from \"@mui/material\";\nimport PropTypes from \"prop-types\";\n\nimport {PlayArrow} from \"@mui/icons-material\";\n\nimport {listMedia} from \"../api\";\n\nconst MediaPlayList = ({onMediaSelect}) => {\n  const [mediaList, setMediaList] = useState([]);\n\n  useEffect(() => {\n    listMedia().then(list => setMediaList(list));\n  }, []);\n\n  return (\n    <Grid container direction=\"row\" spacing={2}>\n      {\n        mediaList.map(media => (\n          <Grid item key={media.name} xs={6} sm={4} md={3} lg={2}>\n            <Card>\n              <CardMedia\n                component=\"img\"\n                image={media.thumbnail}\n                alt={media.name}\n              />\n              <CardActions sx={{justifyContent: \"center\"}}>\n                <Button\n                  size=\"small\"\n                  startIcon={<PlayArrow />}\n                  onClick={() => {\n                    onMediaSelect(media);\n                  }}\n                >\n                  Play\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        ))\n      }\n    </Grid>\n  );\n};\n\nMediaPlayList.propTypes = {\n  onMediaSelect: PropTypes.func.isRequired,\n};\n\nexport default MediaPlayList;\n","import React, {useEffect, useRef} from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst MediaPlayer = ({media}) => {\n  const videoRef = useRef();\n\n  useEffect(() => {\n    if (media) {\n      if (videoRef.current.canPlayType(\"application/vnd.apple.mpegurl\")) {\n        videoRef.current.src = media.media;\n        videoRef.current.play();\n      } else if (window.Hls && window.Hls.isSupported()) {\n        const hls = new window.Hls();\n        hls.loadSource(media.media);\n        hls.attachMedia(videoRef.current);\n        videoRef.current.play();\n      }\n    }\n  }, [media]);\n\n  if (!media) {\n    return null;\n  }\n\n  return (\n    <div>\n      <video ref={videoRef} width=\"100%\" controls>\n        <track kind=\"captions\" />\n      </video>\n    </div>\n  );\n};\n\nMediaPlayer.defaultProps = {\n  media: null,\n};\n\nMediaPlayer.propTypes = {\n  media: PropTypes.shape({\n    media: PropTypes.string.isRequired,\n    thumbnail: PropTypes.string.isRequired,\n  }),\n};\n\nexport default MediaPlayer;\n","import React, {useCallback, useState} from \"react\";\n\nimport {Box, Stack, Typography} from \"@mui/material\";\n\nimport MediaPlayList from \"./MediaPlayList\";\nimport MediaPlayer from \"./MediaPlayer\";\n\nconst MediaPlayBox = () => {\n  const [media, setMedia] = useState(null);\n\n  const handleMediaSelect = useCallback(selectedMedia => {\n    setMedia(selectedMedia);\n  }, []);\n\n  return (\n    <Box sx={{p: 2, border: \"1px solid lightgrey\", borderRadius: 2}}>\n      <Typography variant=\"h5\" sx={{mb: 2}}>\n        Streaming videos\n      </Typography>\n\n      <Stack spacing={2}>\n        <MediaPlayList onMediaSelect={handleMediaSelect} />\n\n        <MediaPlayer media={media} />\n      </Stack>\n    </Box>\n  );\n};\n\nexport default MediaPlayBox;\n","import React from \"react\";\n\nimport {Container, Stack, Typography} from \"@mui/material\";\n\nimport MediaUploader from \"./components/MediaUploader\";\nimport MediaPlayBox from \"./components/MediaPlayBox\";\n\nconst App = () => (\n  <Container sx={{mb: 8}}>\n    <Typography variant=\"h4\" sx={{my: 4}}>\n      HLS demo\n    </Typography>\n\n    <Stack spacing={2}>\n      <MediaUploader />\n\n      <MediaPlayBox />\n    </Stack>\n  </Container>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}